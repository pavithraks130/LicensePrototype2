<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Centralized.WebAPI</name>
    </assembly>
    <members>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:Centralized.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:Centralized.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:Centralized.WebAPI.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:Centralized.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:Centralized.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:Centralized.WebAPI.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,Centralized.WebAPI.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,Centralized.WebAPI.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:Centralized.WebAPI.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Centralized.WebAPI.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(Centralized.WebAPI.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,Centralized.WebAPI.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:Centralized.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Centralized.WebAPI.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:Centralized.WebAPI.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Centralized.WebAPI.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:Centralized.WebAPI.Common.Constants">
            <summary>
            Commonly used Constants
            </summary>
        </member>
        <member name="F:Centralized.WebAPI.Common.Constants.Success">
            <summary>
            Success Status
            </summary>
        </member>
        <member name="F:Centralized.WebAPI.Common.Constants.Deleted">
            <summary>
            Deleted Status
            </summary>
        </member>
        <member name="F:Centralized.WebAPI.Common.Constants.Updated">
            <summary>
            Updated Status
            </summary>
        </member>
        <member name="T:Centralized.WebAPI.Common.CustomOAuthProvider">
            <summary>
            Custom Auth Provider
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Common.CustomOAuthProvider.ValidateClientAuthentication(Microsoft.Owin.Security.OAuth.OAuthValidateClientAuthenticationContext)">
            <summary>
            Validates Token Authentication
            </summary>
            <param name="context">Authentication Context</param>
            <returns>Status indicating Client Authenticity</returns>
        </member>
        <member name="M:Centralized.WebAPI.Common.CustomOAuthProvider.GrantResourceOwnerCredentials(Microsoft.Owin.Security.OAuth.OAuthGrantResourceOwnerCredentialsContext)">
            <summary>
            Grants Resource Owner Credentials
            </summary>
            <param name="context">Credentials Context</param>
            <returns>Resource Owner Credentials if Successful</returns>
        </member>
        <member name="M:Centralized.WebAPI.Common.CustomOAuthProvider.TokenEndpoint(Microsoft.Owin.Security.OAuth.OAuthTokenEndpointContext)">
            <summary>
            Adds Additional Response Parameters
            </summary>
            <param name="context">Token Endpoint Context</param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Common.CustomOAuthProvider.CreateProperties(License.Models.User)">
            <summary>
            Creates Properties
            </summary>
            <param name="userObj">User Object</param>
            <returns>Authentication Properties</returns>
        </member>
        <member name="T:Centralized.WebAPI.Common.GlobalExceptionHandling">
            <summary>
            Global Exception Handling
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Common.GlobalExceptionHandling.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            On Exception in global context
            </summary>
            <param name="context">HTTP Action Executed Context</param>
        </member>
        <member name="T:Centralized.WebAPI.Controllers.BaseController">
            <summary>
            Base Controller Class
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Controllers.BaseController.UserManager">
            <summary>
            User Manager Instance
            </summary>
        </member>
        <member name="P:Centralized.WebAPI.Controllers.BaseController.RoleManager">
            <summary>
            Role Manager Instance
            </summary>
        </member>
        <member name="T:Centralized.WebAPI.Controllers.CartController">
            <summary>
            Controller for Cart Operations
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.CartController.#ctor">
            <summary>
            Constructor for Cart Class
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.CartController.CreateCart(License.Models.CartItem)">
            <summary>
            POST Method. Creates Cart Item Record in the cart for the Subscription which is added
            </summary>
            <param name="item">The Cart Item</param>
            <returns>On success returns created cart else returns error</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.CartController.GetCartItemCount(System.String)">
            <summary>
            Get Method. Gets the Cart Item Count based on the UserId.
            </summary>
            <param name="userId">The User ID</param>
            <returns>Count of Number of Cart Items</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.CartController.GetCartItems(System.String)">
            <summary>
            GET method. Get the Cart Items based on the UserId
            </summary>
            <param name="userId">The User ID</param>
            <returns>The Cart Items Based on User ID</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.CartController.DeleteCartItem(System.Int32)">
            <summary>
            DELETE Method. Delete Item from the Cart
            </summary>
            <param name="id">The Cart Item ID</param>
            <returns>Status of whether Cart Item was deleted</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.CartController.OfflinePayment(System.String)">
            <summary>
            POST Method. Service for the Offline Payment Which creates the Purchase Order and moves the Cart for the
            Approval from Global Admin and returns the Purchase Order Number to the user for the further Tracking
            </summary>
            <param name="userId">The User ID</param>
            <returns>On success returns created Purchase Order else returns error</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.CartController.OnlinePayment(System.String)">
            <summary>
            POST Method. Once the payment is done the User Subscription details will be updated and returns
            Subscription with product Details which was  purchased to sync the data to On Premise DB.
            </summary>
            <param name="userId">The User ID</param>
            <returns>Current Subscription List</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.CartController.CreateSubscriptionAddToCart(License.Models.Subscription)">
            <summary>
            POST Method. Create the Custom Subscription 
            </summary>
            <param name="subscriptionType">Subscription Type</param>
            <returns>Status of Subscription creation</returns>
        </member>
        <member name="T:Centralized.WebAPI.Controllers.FeatureController">
            <summary>
            Controller for Feature Related Operations
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.FeatureController.#ctor">
            <summary>
            Constructor for Feature Controller 
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.FeatureController.GetAllFeatures">
            <summary>
            Get All the Feature List from Db
            </summary>
            <returns>List of Features</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.FeatureController.GetFeatureById(System.Int32)">
            <summary>
            Gets Feature By ID
            </summary>
            <param name="id">Feature ID</param>
            <returns>On successfully finding Feature, returns Feature else returns error</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.FeatureController.CreateFeature(License.Models.Feature)">
            <summary>
            Create Feature Record in database
            </summary>
            <param name="feature">Feature to be created</param>
            <returns>Status of Feature Creation</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.FeatureController.UpdateFeature(System.Int32,License.Models.Feature)">
            <summary>
            Update Existing Feature with Changes.
            </summary>
            <param name="id">Feature ID</param>
            <param name="featureToUpdate">Feature to Update</param>
            <returns>Status indicating if Feature is Updated</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.FeatureController.DeleteFeature(System.Int32)">
            <summary>
            Delete Feature with Specific ID
            </summary>
            <param name="id">Feature ID</param>
            <returns>Status indicating if Feature is Deleted</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.FeatureController.GetFeaturesByCategory(System.Int32)">
            <summary>
            Get Features by Category
            </summary>
            <param name="categoryId">Feature Category ID</param>
            <returns>Feature List By Category</returns>
        </member>
        <member name="T:Centralized.WebAPI.Controllers.NotificationController">
            <summary>
            Controller for Notification Related Operations
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.NotificationController.CreateNotification(License.Models.Notification)">
            <summary>
            POST Method. Create Notification Data
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Centralized.WebAPI.Controllers.SubscriptionCategoryController">
            <summary>
            Controller for Subscription Category
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.SubscriptionCategoryController.#ctor">
            <summary>
            Constructor for Product Category Controller
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.SubscriptionCategoryController.GetAllSubscriptionCategories">
            <summary>
            GET Method: Service is used to get the Subscription Categories.
            </summary>
            <returns>Subscription Category List</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.SubscriptionCategoryController.CreateSubscriptionCategory(License.Models.SubscriptionCategory)">
            <summary>
            POST Method: Create Subscription Category
            </summary>
            <param name="subscriptionCategory">Subscription Category</param>
            <returns>Status indicating Subscription Category Creation</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.SubscriptionCategoryController.GetSubscriptionCategoryById(System.Int32)">
            <summary>
            GET Method: Get Subscription category based on the id
            </summary>
            <param name="id">Subscription Category ID</param>
            <returns>Subscription Category</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.SubscriptionCategoryController.UpdateSubscriptionCategory(System.Int32,License.Models.SubscriptionCategory)">
            <summary>
            PUT Method: Updating the Category changes based on the categoryId.
            </summary>
            <param name="id">Subscription Category ID to be updated</param>
            <param name="category">Subscription Category Updates</param>
            <returns>On success returns updated Subscription Category else returns error</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.SubscriptionCategoryController.DeleteSubscriptionCategory(System.Int32)">
            <summary>
            Delete Method: Delete the Subscription Category by Id.
            </summary>
            <param name="id">Subscription Category ID</param>
            <returns>Status indicating whether Subscription Category is deleted</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.ProductController.GetAllProducts">
            <summary>
            GET Method. Gets all the Products
            </summary>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.ProductController.CreateProduct(License.Models.Product)">
            <summary>
            POST Method. Create Product Data
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.ProductController.UpdateProduct(System.Int32,License.Models.Product)">
            <summary>
            Put Method. Update the Product details based on the Product ID.
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.ProductController.DeleteProduct(System.Int32)">
            <summary>
            Delete Method. Delete Product based on the Product ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.ProductController.GetProductById(System.Int32)">
            <summary>
            Get Method: To get the Product by Product ID
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.ProductController.GetCMMSProducts">
            <summary>
            Get Method: To Get the CMMS Products
            </summary>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.ProductController.GetProductByCategory(System.Int32)">
            <summary>
            Get Methos: Get Products by the Category Id
            </summary>
            <param name="categoryId"></param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.ProductController.GetProductUpdatesByProductId(System.Collections.Generic.List{License.Models.Product})">
            <summary>
            Post method: to get the Product canges based on the Product Id. Input to this service is list Products with Product Id and Last Modified changes.
            </summary>
            <param name="products"></param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.ProductController.GetProductDependency">
            <summary>
            Get Method to get Category and Feature List
            </summary>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.PurchaseOrderController.GetPurchaseOrder">
             <summary>
            Get Method.  Get All the Purchase Order
             </summary>
             <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.PurchaseOrderController.GetPurchaseOrderByUser(System.String)">
            <summary>
            GET Method. Get the Purchase Order List based on the UserId
            </summary>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.PurchaseOrderController.GetOrderDetails(System.Int32)">
            <summary>
            GET Method. Gets the Purchase Order Details based on the Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.PurchaseOrderController.DeletePurchaseOrder(System.Int32)">
            <summary>
            Delete Method. Delete Purchase Order Based on ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.PurchaseOrderController.UpdatePurchaseOrder(System.Int32,License.Models.PurchaseOrder)">
            <summary>
            PUT Method. Update Purchase Order details  based on id
            </summary>
            <param name="id"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.PurchaseOrderController.UpdateMultiplePurchaseOrder(System.Collections.Generic.List{License.Models.PurchaseOrder})">
            <summary>
            PUT Method. Multiple Purchase Orders can be updated in single Call which is Bulk status Update
            </summary>
            <param name="orders"></param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.PurchaseOrderController.CreatePurchaseOrder(License.Models.PurchaseOrder)">
            <summary>
            POST Method. Create Purchase Order with Details.
            </summary>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.PurchaseOrderController.SyncPurchaseOrder(System.String)">
            <summary>
            POST Method. Once the purchase Order are approved by Global Admin  based on the User Id user Subscription
            Records will be created for the purchase Order and Subscription and Product details will be provided
            to sync the Data to OnPremise DB.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Centralized.WebAPI.Controllers.SubscriptionController">
            <summary>
            Controller for Subscription
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.SubscriptionController.#ctor">
            <summary>
            Constructor for Subscrtiption Controller
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.SubscriptionController.GetAllSubscriptions">
            <summary>
            GET Method. To get all the Subscriptions
            </summary>
            <returns>Subscription List</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.SubscriptionController.GetAllSubscription(System.String)">
            <summary>
            Get List of Subscriptions Both Default and Custom Subscriptions
            </summary>
            <param name="userId">User ID to include Custom Subscriptions</param>
            <returns>Subscription List</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.SubscriptionController.CreateSubscription(License.Models.Subscription)">
            <summary>
            POST method. Creates the Subscriptioon
            </summary>
            <param name="subscriptionItem">Subscription Item to be Created</param>
            <returns>On success returns created Subscription else returns error</returns>
        </member>
        <member name="T:Centralized.WebAPI.Controllers.UserController">
            <summary>
            Controller for User
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserController.#ctor">
            <summary>
            Constructor for User Controller
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserController.Create(License.Models.Registration)">
            <summary>
            POST Method. Create User record with Super Admin Role 
            </summary>
            <param name="user">User Registration</param>
            <returns>On success returns created User else returns error</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserController.GetPasswordResetToken(License.Models.ForgotPassword)">
            <summary>
            POST Method. Gets Reset Token for the Forgot Password Functionality
            </summary>
            <param name="userName">User Name</param>
            <returns>Password Reset Token if Successful</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserController.ResetUserPassword(License.Models.ResetPassword)">
            <summary>
            POST Method. Reset the Password with New password based on validating the Reset Token
            </summary>
            <param name="resetPasswordModel">Reset Password Object</param>
            <returns>Status Indicating Password Change</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserController.UpdateActiveStatus(License.Models.User)">
            <summary>
            Put Method. Updating the User Status once user logIn or Log Out
            </summary>
            <param name="userModel">User Object</param>
            <returns>Status indicating if User is Active</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserController.GetAllUsers">
            <summary>
            Get Method. Gets all the Users
            </summary>
            <returns>All Users List</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserController.GetUserById(System.String)">
            <summary>
            GET Method. Get User by  user Id
            </summary>
            <param name="id">User ID</param>
            <returns>User if Exists</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserController.GetUserByEMail(System.String)">
            <summary>
            GET Method. To Get User By EMail
            </summary>
            <param name="email">Email ID</param>
            <returns>User if Exists</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserController.UpdateUser(System.String,License.Models.User)">
            <summary>
            PUT Method. Update the User Data based on the User Id
            </summary>
            <param name="id">User ID</param>
            <param name="user">User to Update</param>
            <returns>Status indicating if User is updated</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserController.DeleteUser(System.String)">
            <summary>
            Delete Method. Delete User by User ID
            </summary>
            <param name="id">User ID</param>
            <returns>Status indicating whther User is Deleted</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserController.UpdatePassword(System.String,License.Models.ChangePassword)">
            <summary>
            PUT Method. Change Password of the user based on the User ID and Previous Password Validation
            which is sent in the CHangePassword Object
            </summary>
            <param name="userId">User ID</param>
            <param name="passwordUpdateModel">Password Update Model</param>
            <returns>Status Indicating if Password is Updated</returns>
        </member>
        <member name="T:Centralized.WebAPI.Controllers.UserSubscriptionController">
            <summary>
            Controller for User Subscription
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserSubscriptionController.#ctor">
            <summary>
            Constructor for User Subscription
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserSubscriptionController.GetExpireSubscription(System.Int32,System.String)">
            <summary>
            Get Method: To the subscription which expires in month  based on the userId
            </summary>
            <param name="duration">No  of Days</param>
            <param name="userId">User ID</param>
            <returns>List of Subscriptions which are set to Expire</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserSubscriptionController.RenewSubscription(System.String,License.Models.RenewSubscriptionList)">
            <summary>
            Post method: To renew the subscription which are selected for the renew based on the subscription ID. Input to this service
            is list of Subscription which need to Renewed for the  User.
            </summary>
            <param name="userId">User ID</param>
            <param name="renewSubList">List of Subscription Renewals</param>
            <returns>Status Indicating Subscription Renewal</returns>
        </member>
        <member name="T:Centralized.WebAPI.Controllers.UserTokenController">
            <summary>
            Controller for User Token
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserTokenController.#ctor">
            <summary>
            Constructor for User Token
            </summary>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserTokenController.GetAllUserTokens">
            <summary>
            GET Method. Get List of all User Tokens.
            </summary>
            <returns>List of All User Tokens</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserTokenController.CreateUserToken(License.Models.UserToken)">
            <summary>
            POST Method. Create User Token for the specified Email
            </summary>
            <param name="token">User Token</param>
            <returns>On success returns created Token else returns error</returns>
        </member>
        <member name="M:Centralized.WebAPI.Controllers.UserTokenController.VerifyToken(License.Models.UserToken)">
            <summary>
            POST Method. Verify the User Token with Email  during User Registration
            </summary>
            <param name="token">User Token</param>
            <returns>Status Indicating if User Token is verified</returns>
        </member>
    </members>
</doc>
