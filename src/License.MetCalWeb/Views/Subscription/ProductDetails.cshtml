@model  License.MetCalWeb.Models.SubscriptionType
@{
    ViewBag.Title = "ProductDetails";
}

<link type="text/css" href="~/Content/SubscriptionContainerStyle.css" rel="stylesheet" />
<link href="~/Content/ProductCatalogDetails.css" rel=" stylesheet" type="text/css" />

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Create", "Subscription", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
            <div class="line navbar navbar-inverse">
                <nav class="shop-header">
                    <ul id="menu" class="text-color nav navbar-nav navbar-right">
                        <li>@Html.ActionLink("Shop", "Shop", "PurchaseNavigation")</li>
                        <li>@Html.ActionLink("Pay Quote", "PayQuote", "PurchaseNavigation")</li>
                        <li>@Html.ActionLink("Renew", "Renew", "PurchaseNavigation")</li>
                        <li style="border-style:solid;border-color:green;border-radius:3px 4px">@Html.ActionLink("Cart " + @TempData["CartCount"], "CartItem", "Cart", null, new { @style = "color:green;border:thick" })</li>
                    </ul>
                </nav>
            </div>
            <div class="line clearfix ng-scope">
                <h3>@Model.Category.Name</h3>
            </div>
                <div class="form-group">
                    <div class="line clearfix">
                        <ul class="nav navbar-nav">
                            <li>@Html.ActionLink("Server", "ProductDeatails", "Subscription")</li>
                            <li>@Html.ActionLink("Cloud", "ProductDeatails", "Subscription")</li>
                        </ul>
                    </div>
                </div>
                <div class="form-group">
                    <ol>
                        <li class="line">
                            <div>
                                <h3>1. Concurrent Users</h3>
                                <div class="form-input col-md-12" style="margin:5px 20px ; ">
                                    @Html.DropDownListFor(Model => Model.NoOfUsers, ViewData["UserCount"] as List<SelectListItem>, "", new { @class = "form-control ddlActivationPeriode" })
                                </div>
                            </div>
                        </li>
                        <li class="line">
                            <div>
                                @{ Html.RenderAction("Features", new { id = Model.Category.Id }); }
                            </div>
                        </li>
                        <li class="line">
                            <div>
                                @{ Html.RenderAction("CMMSProducts", new { id = Model.Category.Id }); }
                            </div>
                        </li>


                    </ol>

                </div>

                <div class="form-group">
                    <div class="col-md-7">
                    </div>
                    <label class="col-md-2 float-right">SubTotal(USD) </label>
                    <label class="total col-md-3">0</label>

                </div>
                <div class="form-group">
                    <label id="lblError" class="col-md-6"></label>
                    <div class="col-md-6">
                        <button class="btn btn-custom  btn-save float-right" style="margin-left:5px; margin-right:5px;" name="addToCart" value="false">Create</button>
                        @if (LicenseSessionState.Instance.IsSuperAdmin)
                        {
                            <button class="btn btn-custom  btn-save float-right" name="addToCart" value="true">Create And AddToCart</button>
                        }
                    </div>
                </div>
                @Html.HiddenFor(m => m.Category.Id)
                                    @Html.HiddenFor(m => m.Category.Name)

                                    }

    </div>
</div>

<script>
    $(document).ready(function () {

        var total = 0;
        $('.btn-save').click(function () {
            var isPostEnabled = true;
            i = 0;
            j = 0;
            $('input[type=checkbox]:checked').each(function (e) {
                var parentObj = $($('input[type=checkbox]:checked')[e]).parent().parent();
                var txtQty = $(parentObj).find('.proQty').find('.txt-qty');
                var qty = $(txtQty).val();
                if (parseInt(qty) == 0)
                    j++;
                i++;
            });
            if (i == 0) {
                $('#lblError').attr('style', 'display:inline;color:red;');
                $('#lblError').text("No Products Selected");
                isPostEnabled = isPostEnabled && false;
            }
            else if (j > 0) {
                $('#lblError').attr('style', 'display:inline;color:red;');
                $('#lblError').text("Quantity not specified for the selected Products");
                isPostEnabled = isPostEnabled && false;
            }
            else {
                $('#lblError').attr('style', 'display:none;');
                isPostEnabled = isPostEnabled && true;
            }

            if ($('.txt-sub').val() == "") {
                isPostEnabled = isPostEnabled && false;
                $('#lblError').text("Subscription Name Not specified");
                $('#lblError').attr('style', 'display:inline;color:red;');
            }
            return isPostEnabled;
        });

        $('.enableQty').on('click', function () {
            var data = $(this).is(':checked');
            var qtyObj = $(this).parent().parent();
            var prodPrice = $(qtyObj).find('.proCost').find('.lblSelectedProductCost').text();
            var txtQty = $(qtyObj).find('.proQty').find('.txt-qty');
            var price = $(qtyObj).find('.proPrice').find('.price_val');
            if (data == true) {
                $(txtQty).removeAttr('disabled');
                var qty = parseInt($(txtQty).val());
                var pricePerUnit = parseInt(prodPrice)
                var amount = pricePerUnit * qty;
                $(price).text(amount);
            }
            else {
                $(txtQty).attr('disabled', 'disabled');
                $(price).text('0');
            }
            calculateTotal();
        });


        $('.txt-qty').on('change', function () {
            var parentObj = $(this).parent().parent();
            var qty = $(this).val();
            var lblObj = $(parentObj).find('.proPrice').find('.price_val');
            var costObj = $(parentObj).find('.proCost').find('.lblSelectedProductCost').text();
            var selectedProdQTY = qty * parseInt(costObj);
            $(parentObj).find('.proPrice').find('.price_val').text(selectedProdQTY);
            calculateTotal();
        });

        $('.ddlActivationPeriode').on('change', function () {
            calculateTotal();
        });


        function calculateTotal() {
            var priceList = $('.price_val').toArray();
            var i = 0;
            var amount = 0;
            priceList.forEach(function (e) {
                var status = $(e).parent().parent().find('.proName').find('.checkbox').is(':checked');
                if (status == true) {
                    amount += parseInt($(e).text());
                    i++;
                }
            });
            if (i > 0) {
                var periode = $('.ddlActivationPeriode').val();
                var total = parseFloat(periode) * parseFloat(amount);
                $('.total').text(total);
                $('#hdnPrice').val(total);
            }
            else {
                $('.total').text('0');
                $('#hdnPrice').val(0);
            }
        }
    });
</script>
