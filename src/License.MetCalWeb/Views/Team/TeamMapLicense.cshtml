@model License.MetCalWeb.Models.TeamMappingDetails
<script>
    $(document).ready(function () {
        $('.btn-save').click(function (e) {
            var i = 0;
            var isPostEnabled = true;
            var concurrentUsertext = $('.hdnConcurentUser').val();
            var concurentUser = parseInt(concurrentUsertext);
            $('input[type=checkbox]:checked').each(function (e) {
                var parentObj = $($('input[type=checkbox]:checked')[e]).parent().parent();
                var ctrl = $(parentObj).find('.pro_count').find('.lblProCount');
                if (ctrl.length > 0) {
                    var availableQty = $(ctrl).text();
                    var qty = parseInt(availableQty);
                    isPostEnabled = isPostEnabled && qty >= concurentUser;
                }
                i++;
            });
            if (!isPostEnabled) {
                $('#lblError').attr('style', 'display:inline');
                $('#lblError').text('can not map license, required number of product license not exist');
            }
            if (i == 0) {
                isPostEnabled = false;
                $('#lblError').attr('style', "display:inline");
                $('#lblError').text("License not selected");
            }
            return isPostEnabled;
        });
    });
</script>
<h2>
    Product List
</h2>
<br />
<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("TeamMapLicense", "Team", FormMethod.Post))
        {
            @Html.ValidationSummary()
            @Html.AntiForgeryToken()
            <div class="form-group">
                <div class="col-md-8" style="padding-bottom:20px">
                    <span>
                        Team Name :  @Model.SelectedTeamName
                    </span>
                </div>

                <div class="col-md-8" style="padding-bottom:20px">
                    <span> Concurrent team user : @Html.DisplayFor(m=>m.ConcurrentUserCount)
                </div>
            </div>
            if (Model == null || Model.ProductList.Count == 0)
            {
                <div class="form-group">
                    <div class="col-md-8">
                        <span>No Subscriptions exist  </span>
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <div class="col-md-8">
                        <table class="table" style="border: none">
                            <tr>
                                <td><strong>Name</strong></td>
                                <td><strong>Product Available </strong></td>
                            </tr>
                            @foreach (var pro in Model.ProductList)
                            {

                                <tr>
                                    <td>
                                        <input type="checkbox" name="selectedSubscription" value="ProId:@pro.Product.Id" checked="@pro.IsSelected" class="checkCombo checkbox-inline" @(pro.AvailableProductCount == 0 || pro.IsSelected ? "disabled='disabled'" : "")>
                                        <label class="control-label">

                                            @pro.Product.Name
                                        </label>
                                    </td>
                                    <td class="pro_count">
                                        <label class="lblProCount" name="avl_Qty">@pro.AvailableProductCount</label>
                                    </td>
                                </tr>
                            }
                        </table>
                        <label class="message-error" id="lblError"></label><br />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-8">
                        <input type="submit" name="users" value="Submit" class="btn btn-default btn-custom btn-save" />
                    </div>
                </div>
            }
            @Html.HiddenFor(m => m.ConcurrentUserCount, new { @class = "hdnConcurentUser" })
        }
    </div>
</div>
