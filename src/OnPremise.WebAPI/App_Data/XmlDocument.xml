<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OnPremise.WebAPI</name>
    </assembly>
    <members>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:OnPremise.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:OnPremise.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:OnPremise.WebAPI.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:OnPremise.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:OnPremise.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:OnPremise.WebAPI.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,OnPremise.WebAPI.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,OnPremise.WebAPI.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:OnPremise.WebAPI.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},OnPremise.WebAPI.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(OnPremise.WebAPI.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,OnPremise.WebAPI.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:OnPremise.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OnPremise.WebAPI.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:OnPremise.WebAPI.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:OnPremise.WebAPI.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OnPremise.WebAPI.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:OnPremise.WebAPI.Controllers.AssetController">
            <summary>
            Asset Service 
            </summary>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.AssetController.Get">
            <summary>
            Get Method to list all the Hardware assets
            </summary>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.AssetController.Create(License.Models.TeamAsset)">
            <summary>
            Post Method to create the Asset
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.AssetController.GetById(System.Int32)">
            <summary>
            Get Method to get the asset/Hardware details based on Id
            </summary>
            <param name="id"></param>
            <returns></returns>
            
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.AssetController.Update(System.Int32,License.Models.TeamAsset)">
            <summary>
            Put Method to Update the asset changes based on the Asset Id
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.AssetController.Delete(System.Int32)">
            <summary>
            Delete Method. Delete the asset by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.RolesController.GetRoles">
            <summary>
            Get Roles List 
            </summary>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.RolesController.GetRoleById(System.String)">
            <summary>
            Get Method, Get the Role by Role ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.RolesController.Create(License.Models.Role)">
            <summary>
            Post Method, Create the Role
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.FileActionController.UploadFile(System.Object)">
            <summary>
            POST Method: Used to Update the products in bulk
            </summary>
            <param name="CSV data ListdataList"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserLicenseController.AddUserLicense(License.Models.UserLicenseDataMapping)">
            <summary>
            Post method. Map the License to the User. The license will be fetched based on the subscription and Product Id
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserLicenseController.RemoveUserLicense(License.Models.UserLicenseDataMapping)">
            <summary>
            Post Method. To remove the Mapped License from User.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserLicenseController.GetLicensesRequestByUser(System.String)">
            <summary>
            Get Method. To get all the Requested license for the User based on UserId to check the status of the license Request.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserLicenseController.GetRequestedLicnses(System.String)">
            <summary>
            Get Method. To Get the License Request of all the team members irrespective of the Team based on the admin ID.
            </summary>
            <param name="adminId"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserLicenseController.GetRequestedLicnses(System.Int32)">
            <summary>
            Method to get the License Request for the Approval or the Rejection based on the TeamId. Here 
            Perticular Team Member request will be fetched based on the Team Id
            </summary>
            <param name="teamId"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserLicenseController.ApproveRejectLicense(System.Collections.Generic.List{License.Models.UserLicenseRequest})">
            <summary>
            Post Method. To update the approve or Rejection status of the License Request. 
            Multiple request will be updated. Input to this Service is List of UserLicenseRequest Object which contains 
            </summary>
            <param name="licReqList"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserLicenseController.RequestLicense(System.Collections.Generic.List{License.Models.UserLicenseRequest})">
            <summary>
            Post Method. Used for the License Request. Multiple License will be requested
            </summary>
            <param name="licReqList"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserLicenseController.GetUserSubscripedLicense(License.Models.FetchUserSubscription)">
            <summary>
            Post Method. Used to fetch the User Subscribed License List based on the Team Id and User Id.
            Features will be fetched based on the user Requirement. The input to the service is FetchUserSubscription
            which contains UserId, TeamId and IsFeatureRequired Property.
            This request can be used to fetch the User License details based on the Teama Id ad User Id.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.ProductController.GetProductsByAdmin(System.String)">
            <summary>
            GET Method : Gets products based on the admin Id
            </summary>
            <param name="adminId"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.ProductController.UpdateProducts(System.Collections.Generic.List{License.Models.Product})">
            <summary>
            POST Method: Used to Update the products in bulk
            </summary>
            <param name="productList"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.ProductController.GetSubscriptionProduct(System.String)">
            <summary>
            Get Method: Gets the list of the Subscribed Products
            </summary>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.ProductController.GetProductsWithUserMappedProduct(System.String,System.String)">
            <summary>
            Get Method, To fetchc the Products list along with user products which is already mapped to the User.
            </summary>
            <param name="adminId"></param>
            <param name="userId"></param>
            <returns>List of Products</returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamController.GetTeamById(System.Int32)">
            <summary>
            Get Method. To get the Team along with Team Member details based on the TeamId.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamController.GetTeamByAdminId(System.String)">
            <summary>
            Get Method.To get Team List  based on the admin Id
            </summary>
            <param name="adminId"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamController.GetTeamByUserId(System.String)">
            <summary>
            GET Method. To get the Team List based on UserId to which user belongs
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamController.CreateTeam(License.Models.Team)">
            <summary>
            POST Method. To Create Team
            </summary>
            <param name="team"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamController.UpdateTeam(System.Int32,License.Models.Team)">
            <summary>
            PUT Method. To Update the Team Details
            </summary>
            <param name="id"></param>
            <param name="team"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamController.DeleteTeam(System.Int32)">
            <summary>
            DELETE Method. To delete Team based on the TeamId. The Tea will be deleted but the Team Member will be
            updated to the default team .
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamController.UpdateConcurentUser(License.Models.Team)">
            <summary>
            POST Method: To update the concurrent user to team 
            and  update the product License if the products are mapped
            </summary>
            <param name="team"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamLicenseController.AddTeamLicense(License.Models.TeamLicenseDataMapping)">
            <summary>
            Post method. Map the License to the Team. The license will be fetched based on the subscription and Product Id
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamLicenseController.DeleteTeamLicenses(License.Models.TeamLicenseDataMapping)">
            <summary>
            Delete Method : To delete the team License
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamLicenseController.GetTeamSubscritionLicense(System.Int32)">
            <summary>
            Post Method. Used to fetch the Team Subscribed License List based on the Team Id .
            Features will be fetched based on the user Requirement. The input to the service is FetchUserSubscription
            which contains UserId, TeamId and IsFeatureRequired Property.
            This request can be used to fetch the User License details based on the Teama Id .
            </summary>
            <param name="teamId"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamMemberController.CreateInvite(License.Models.TeamMember)">
            <summary>
            POST Method. To create the User Invite Request to the Team
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamMemberController.CreateTeamMembers(System.Collections.Generic.List{License.Models.TeamMember})">
            <summary>
            POST Method: To Create the Team Member record
            </summary>
            <param name="teamMemList"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamMemberController.RemoveTeamMembers(System.Collections.Generic.List{License.Models.TeamMember})">
            <summary>
            POST Method : To remove Team Members in Bulk
            </summary>
            <param name="teamMemList"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamMemberController.DeleteTeamMember(System.Int32)">
            <summary>
            Delete Method. To Remove the Team Member from the Team. but the teama member will be updated to the Default team
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamMemberController.UpdateInvitationStatus(License.Models.TeamMember)">
            <summary>
            PUT method. To update the Team Meember for User Invitation Request Status can be updated
            </summary>
            <param name="mem"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamMemberController.UpdateAdminAccess(License.Models.TeamMember)">
            <summary>
            Put Method. To Update the admin access to the Team Member 
            </summary>
            <param name="mem"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamMemberController.GetTeamMemberByUser(System.Int32)">
            <summary>
            Get Method. To fetch all the Team Member details based on the Team Id.
            </summary>
            <param name="teamId"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.TeamMemberController.GetTeamMemberByUser(System.String)">
            <summary>
            Get Method. To get the User Invitation / Team Member record based on the UserId.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserController.GetUsers">
            <summary>
            Get method. To Get all the User 
            </summary>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserController.CreateUser(License.Models.Registration)">
            <summary>
            POST method. To create User 
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserController.UpdateRole(System.String,License.Models.User)">
            <summary>
            Put Method. To Update the User Details based on the UserId
            </summary>
            <param name="id"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserController.GetUserById(System.String)">
            <summary>
            Get Method. Get the user By Userid
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserController.GetUserByEMail(System.String)">
            <summary>
            Get Method. Get the user by EMail
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserController.DeleteUser(System.String)">
            <summary>
            Delete Method. Delete user by User Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserController.GetPasswordResetToken(License.Models.ForgotPassword)">
            <summary>
            Post Method. Get Password Reset Token  for reseting password.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserController.ResetuserPassword(License.Models.ResetPassword)">
            <summary>
            POST method. Update/Reset the password.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserController.UpdateActiveStatus(License.Models.User)">
            <summary>
            PUT method. To update the User Status when User is Online or Offline
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserController.UpdatePassword(System.String,License.Models.ChangePassword)">
            <summary>
            Pot method. ChangePassword the Password
            </summary>
            <param name="userId"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserController.IsConcurrentUserLoggedIn(License.Models.ConcurrentUserLogin)">
            <summary>
            GET Method. Check for the concurent user 
            </summary>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserController.GetUserDetailsById(System.String)">
            <summary>
            Get method to fetch the User Details based on the User ID to fetch the Team Details and User Licenese details.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserSubscriptionController.CreateSubscription(License.Models.SubscriptionList)">
            <summary>
            POST Method: Sync the subscription from Centralized to ON premise
            </summary>
            <param name="subscriptionData"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserSubscriptionController.UpdateSubscriptionRenewal(License.Models.SubscriptionList,System.String)">
            <summary>
             POST Method: To update the renewal  subscription details
            </summary>
            <param name="subscriptionList"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserSubscriptionController.GetSubscriptionDetails(System.String)">
            <summary>
            GET Method : to get the subscription details by admin ID
            </summary>
            <param name="adminId"></param>
            <returns></returns>
        </member>
        <member name="M:OnPremise.WebAPI.Controllers.UserSubscriptionController.GetSubscriptionDetailsForLicenseMap(System.String,System.String)">
            <summary>
            Get Method: to get the subscription License based on the admin id and User Id  for the license Map
            </summary>
            <param name="adminId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
    </members>
</doc>
